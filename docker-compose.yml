services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"       # AMQP
      - "15672:15672"     # Management UI
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
      RABBITMQ_LOAD_DEFINITIONS: /etc/rabbitmq/definitions.json
      RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS: '-rabbitmq_management load_definitions "/etc/rabbitmq/definitions.json"'

    healthcheck:
      test: [ "CMD", "rabbitmqctl", "status" ]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - ./rabbitmq-definitions.json:/etc/rabbitmq/definitions.json

  postgres:
    image: postgres:15
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: raw_db
    volumes:
      - pgdata:/var/lib/postgresql/data
  consumer:
    build:
      context: ./consumer
    container_name: consumer
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_started
    environment:
      - PYTHONUNBUFFERED=1
      - RABBITMQ_HOST=rabbitmq
      - DATABASE_URL=postgresql://user:password@postgres/raw_db
  normalizer:
    build:
      context: ./normalizer
    container_name: normalizer
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_started
    environment:
      - PYTHONUNBUFFERED=1
      - RABBITMQ_HOST=rabbitmq
      - DATABASE_URL=postgresql://user:password@postgres/raw_db
  uploader:
    build:
      context: ./app
    container_name: uploader
    depends_on:
      rabbitmq:
        condition: service_healthy
    ports:
      - "12345:12345"
    environment:
      - PYTHONUNBUFFERED=1
      - RABBITMQ_HOST=rabbitmq






volumes:
  pgdata: